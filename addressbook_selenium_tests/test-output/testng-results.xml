<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="15" failed="0" total="15" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="605" started-at="2014-04-12T12:46:55Z" finished-at="2014-04-12T12:46:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="605" started-at="2014-04-12T12:46:55Z" finished-at="2014-04-12T12:46:56Z">
      <class name="com.example.tests.GroupCreationTests">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="setUp" is-config="true" duration-ms="0" started-at="2014-04-12T15:46:55Z" finished-at="2014-04-12T15:46:55Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: /Users/nataliiapavlenko/Documents/Java_dev/PFT-17_nataliia.pavlenko.addressbook_selenium_tests/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: /Users/nataliiapavlenko/Documents/Java_dev/PFT-17_nataliia.pavlenko.addressbook_selenium_tests/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:177)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:117)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:112)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:82)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:106)
	at com.example.fw.ApplicationManager.<init>(ApplicationManager.java:34)
	at com.example.tests.TestBase.setUp(TestBase.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=, header=, footer=groupfooter611295525]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="1" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=groupname-1226096136, header=groupheader494720150, footer=groupfooter-2077465779]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=groupname-64487982, header=groupheader924513906, footer=groupfooter641456853]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=, header=groupheader1038110676, footer=groupfooter756500969]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=, header=groupheader350850724, footer=groupfooter1939008206]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="1" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=groupname-1592855300, header=groupheader1599621654, footer=]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=, header=groupheader827806018, footer=groupfooter-538817785]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=groupname1836760523, header=, footer=]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="1" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=, header=, footer=groupfooter-464291723]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="testGroupCreationWithValidData(com.example.tests.GroupData)[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="testGroupCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="groupsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GroupData [name=, header=groupheader-991104387, footer=groupfooter1368412120]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupCreationWithValidData -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.example.tests.GroupCreationTests@220acc95]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-04-12T15:46:56Z" finished-at="2014-04-12T15:46:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.example.tests.GroupCreationTests -->
      <class name="com.example.tests.ContactCreationTests">
        <test-method status="SKIP" signature="testContactCreationWithValidData(com.example.tests.ContactData)[pri:0, instance:com.example.tests.ContactCreationTests@787ad957]" name="testContactCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="contactsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ContactData [lastname=lastname768378918, firstname= ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactCreationWithValidData -->
        <test-method status="SKIP" signature="testContactCreationWithValidData(com.example.tests.ContactData)[pri:0, instance:com.example.tests.ContactCreationTests@787ad957]" name="testContactCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="contactsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ContactData [lastname=lastname-1428088703, firstname=firstname350642364 ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactCreationWithValidData -->
        <test-method status="SKIP" signature="testContactCreationWithValidData(com.example.tests.ContactData)[pri:0, instance:com.example.tests.ContactCreationTests@787ad957]" name="testContactCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="contactsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ContactData [lastname=, firstname=firstname-181500523 ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactCreationWithValidData -->
        <test-method status="SKIP" signature="testContactCreationWithValidData(com.example.tests.ContactData)[pri:0, instance:com.example.tests.ContactCreationTests@787ad957]" name="testContactCreationWithValidData" duration-ms="1" started-at="2014-04-12T15:46:56Z" data-provider="contactsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ContactData [lastname=, firstname=firstname-1494737620 ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactCreationWithValidData -->
        <test-method status="SKIP" signature="testContactCreationWithValidData(com.example.tests.ContactData)[pri:0, instance:com.example.tests.ContactCreationTests@787ad957]" name="testContactCreationWithValidData" duration-ms="0" started-at="2014-04-12T15:46:56Z" data-provider="contactsFromFile" finished-at="2014-04-12T15:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ContactData [lastname=lastname-739266016, firstname= ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactCreationWithValidData -->
      </class> <!-- com.example.tests.ContactCreationTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
